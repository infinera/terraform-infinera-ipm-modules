terraform {
  required_providers {
    ipm = {
      source = "infinera.com/poc/ipm"
    }
  }
}

// Constellation Network's leaf module supports CRUD functions
resource "ipm_leaf_module" "leaf_modules" {
  //for_each   = { for module in var.leaf_modules : module.identifiername => module }
  for leaf_module in var.leaf_modules:
    network_id = var.network_id
    config = {
      selector = leaf_module.identifier.id == null ? (leaf_module.identifier.name == null ? (leaf_module.identifier.mac_address == null ? (leaf_module.identifier.serial_number == null ? (leaf_module.identifier.host_name == null ? (leaf_module.identifier.host_port_id == null ? (leaf_module.identifier.host_sys_name == null ? (leaf_module.identifier.host_port_source_mac == null ? null : { host_port_selector_by_port_source_mac = { port_source_mac = leaf_module.identifier.port_source_mac } }) : { host_port_selector_by_sys_name = { sys_name = leaf_module.identifier.host_sys_name, port_id = leaf_module.identifier.host_port_id, port_id_subtype = leaf_module.identifier.host_port_id_subtype } }) : { host_port_selector_by_port_id = { chassis_id = leaf_module.identifier.host_chassis_id, chassis_id_subtype = leaf_module.identifier.host_chassis_id_subtype, port_id = leaf_module.identifier.host_port_id, port_id_subtype = leaf_module.identifier.host_port_id_subtype } }) : { host_port_selector_by_name = { host_name = leaf_module.identifier.host_name, host_port_name = leaf_module.identifier.host_port_name } }) : { module_selector_by_module_serial_number = { module_serial_number = leaf_module.identifier.serial_number } }) : { module_selector_by_module_mac = { module_mac = leaf_module.identifier.mac_address } }) : { module_selector_by_module_name = { module_name = leaf_module.identifier.name } }) : { module_selector_by_module_id = { module_id = leaf_module.identifier.id }
      }
      module = {
        traffic_mode                 = leaf_module.config == null ? (leaf_module.config_profile == null ? (var.network_config_profile == null ? null : var.network_config_profile.traffic_mode) : var.module_config_profiles[leaf_module.config_profile].traffic_mode) : (leaf_module.config.traffic_mode == null ? (leaf_module.config_profile == null ? (var.network_config_profile == null ? null : var.network_config_profile.traffic_mode) : var.module_config_profiles[leaf_module.config_profile].traffic_mode) : leaf_module.config.traffic_mode)
        fiber_connection_mode        = leaf_module.config == null ? (leaf_module.config_profile == null ? (var.network_config_profile == null ? null : var.network_config_profile.fiber_connection_mode) : var.module_config_profiles[leaf_module.config_profile].fiber_connection_mode) : (leaf_module.config.fiber_connection_mode == null ? (leaf_module.config_profile == null ? (var.network_config_profile == null ? null : var.network_config_profile.fiber_connection_mode) : var.module_config_profiles[leaf_module.config_profile].fiber_connection_mode) : leaf_module.config.fiber_connection_mode)
        planned_capacity             = leaf_module.config == null ? leaf_module.config_profile == null ? var.network_config_profile == null ? null : var.network_config_profile.planned_capacity : var.module_config_profiles[leaf_module.config_profile].planned_capacity == null ? var.network_config_profile == null ? null : var.network_config_profile.planned_capacity : var.module_config_profiles[leaf_module.config_profile].planned_capacity : leaf_module.config.planned_capacity == null ? var.network_config_profile == null ? null : var.network_config_profile.planned_capacity : leaf_module.config.planned_capacity
        requested_nominal_psd_offset = leaf_module.config == null ? (leaf_module.config_profile == null ? (var.network_config_profile == null ? null : var.network_config_profile.requested_nominal_psd_offset) : var.module_config_profiles[leaf_module.config_profile].requested_nominal_psd_offset) : (leaf_module.config.requested_nominal_psd_offset == null ? (leaf_module.config_profile == null ? (var.network_config_profile == null ? null : var.network_config_profile.requested_nominal_psd_offset) : var.module_config_profiles[leaf_module.config_profile].requested_nominal_psd_offset) : leaf_module.config.requested_nominal_psd_offset)
        fec_iterations               = leaf_module.config == null ? (leaf_module.config_profile == null ? (var.network_config_profile == null ? null : var.network_config_profile.fec_iterations) : var.module_config_profiles[leaf_module.config_profile].fec_iterations) : (leaf_module.config.fec_iterations == null ? (leaf_module.config_profile == null ? (var.network_config_profile == null ? null : var.network_config_profile.fec_iterations) : var.module_config_profiles[leaf_module.config_profile].fec_iterations) : leaf_module.config.fec_iterations)
        tx_clp_target                = leaf_module.config == null ? (leaf_module.config_profile == null ? (var.network_config_profile == null ? null : var.network_config_profile.tx_clp_target) : var.module_config_profiles[leaf_module.config_profile].tx_clp_target) : (leaf_module.config.tx_clp_target == null ? (leaf_module.config_profile == null ? (var.network_config_profile == null ? null : var.network_config_profile.tx_clp_target) : var.module_config_profiles[leaf_module.config_profile].tx_clp_target) : leaf_module.config.tx_clp_target)
      }
    }
}
